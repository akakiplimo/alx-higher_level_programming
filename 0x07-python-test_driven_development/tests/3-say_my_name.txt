The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

Importing the function from the module:
	 >>> say_my_name = __import__('3-say_my_name').say_my_name

Checking for module docstring:
	 >>> m = __import__('3-say_my_name').__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:
	 >>> f = __import__('3-say_my_name').say_my_name.__doc__
         >>> len(f) > 1
         True

Checking for passing None as first_name:
         >>> say_my_name(None, "Kiplimo")
         Traceback (most recent call last):
         ...
         TypeError: first_name must be a string

Checking for passing None as last_name:
         >>> say_my_name("Ad", None)
         Traceback (most recent call last):
         ...
         TypeError: last_name must be a string

Checking for passing wrong type as first_name:
         >>> say_my_name(1, "Kip")
         Traceback (most recent call last):
         ...
         TypeError: first_name must be a string

Checking for passing wrong type as last_name:
         >>> say_my_name("Ad", 2)
         Traceback (most recent call last):
         ...
         TypeError: last_name must be a string

Checking for passing more that 2 arguments:
         >>> say_my_name("AD", "Kip", "Kip")
         Traceback (most recent call last):
         ...
         TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

Checking for passing 2 string arguments:
         >>> say_my_name("Abu", "Kip")
         My name is Abu Kip

Checking for passing 1 string argument:
	 >>> say_my_name("Abu")
         My name is Abu 
